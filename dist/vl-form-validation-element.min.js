import{vlFormValidation}from"/node_modules/vl-ui-form-validation/dist/vl-form-validation.min.js";export const vlFormValidationElement=t=>class extends t{static get formAssociated(){return!0}constructor(t){super(t),this._internals=this.attachInternals()}disconnectedCallback(){this._observer&&this._observer.disconnect()}get validity(){return this._internals.validity}get validationMessage(){return this._internals.validationMessage}get willValidate(){return this._internals.willValidate}setCustomValidity(t){t?this._internals.setValidity({customError:!0},t):this._internals.setValidity({})}checkValidity(){return this._internals.checkValidity()}reportValidity(){return this._internals.reportValidity()}_dressFormValidation(){this.form&&(this._setClassAttributes(),this._observer=this._observeFormValidationClasses(),Object.assign(this,vlFormValidation),this.dress(this.form))}get _inputElement(){if(this.shadowRoot)return this.shadowRoot.querySelector("input")}_observeFormValidationClasses(){const t=new MutationObserver((t=>{["error","success"].forEach((i=>{t.find((t=>[...t.target.classList].find((t=>t.includes("vl-form-validation--"+i)))))?this.hasAttribute("data-vl-"+i)||this.setAttribute("data-vl-"+i,""):this.removeAttribute("data-vl-"+i)}))}));return t.observe(this,{attributes:!0,attributeFilter:["class"]}),t}_nameChangedCallback(t,i){this._inputElement&&this._inputElement.name!=i&&(this._inputElement.name=i,this.setAttribute("name",i))}_setClassAttributes(){this.setAttribute("data-vl-success-class","vl-form-validation--success"),this.setAttribute("data-vl-error-class","vl-form-validation--error")}};